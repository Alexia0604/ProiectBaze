<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    

    <Style x:Key="BtnStyle" TargetType="RadioButton">

        <Setter Property="HorizontalAlignment"
         Value="Center" />
        <Setter Property="VerticalAlignment"
         Value="Center" />
        <Setter Property="Margin"
         Value="0,5,0,0" />
        <Setter Property="Foreground" Value="#b587e6"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border"
                     Height="50"
                     Width="228"
                     CornerRadius="10"
                     BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                      Color="Transparent" />
                        </Border.Background>

                        <Grid>

                            <Border x:Name="Indicator"
                             Height="35"
                             Width="4"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             Background="#272B2F"
                             Visibility="Collapsed"
                             CornerRadius="2" />

                            <ContentPresenter />

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility"
                             TargetName="Indicator"
                             Value="Visible"/>
                            <Setter Property="Foreground" Value="#6c3483"/>

                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter"
                               SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                             Storyboard.TargetProperty="Color"
                                             From="Transparent"
                                             To="#d070e6"
                                             Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave"
                               SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                             Storyboard.TargetProperty="Color"
                                             From="LightGray"
                                             To="Transparent"
                                             Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <Trigger Property="IsChecked"
                          Value="True">

                            <Setter Property="Background"
                             TargetName="border"
                             Value="Lightgray" />
                            <Setter Property="Visibility"
                             TargetName="Indicator"
                             Value="Visible" />
                            <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage" >
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="22,0,0,0"/>
    </Style>

    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="VerticalAlignment"
     Value="Center" />
        <Setter Property="HorizontalAlignment"
     Value="Left" />
       
        <Setter Property="FontSize"
     Value="15" />
        <Setter Property="Margin"
     Value="20,0,0,0" />
    </Style>

    <Style x:Key="btnModifica" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  x:Name="Border"
                          Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center"
                                         VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#e2b0ff"/>

                            <Setter TargetName="Border" Property="BorderBrush" Value="#5f0aa1"/>

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Tag}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DynamicButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  x:Name="Border"
                         Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Top"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#78fa7a"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#089e0a"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"
                     Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>